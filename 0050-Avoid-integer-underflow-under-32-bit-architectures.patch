From 3b4cac540e1375a9408a10998bd58886e9c58c25 Mon Sep 17 00:00:00 2001
From: Frediano Ziglio <fziglio@redhat.com>
Date: Tue, 15 Sep 2015 16:35:39 +0100
Subject: [PATCH 50/53] Avoid integer underflow under 32 bit architectures

The segment_size computation on 32 bit can lead to big numbers which
can lead to negative offset. As we test we don't overrun the buffer
avoid to underrun it as we don't have a check for this.

Signed-off-by: Frediano Ziglio <fziglio@redhat.com>
---
 server/red_parse_qxl.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/server/red_parse_qxl.c b/server/red_parse_qxl.c
index b10fc8e..0f2153c 100644
--- a/server/red_parse_qxl.c
+++ b/server/red_parse_qxl.c
@@ -265,6 +265,9 @@ static SpicePath *red_get_path(RedMemSlotInfo *slots, int group_id,
         count = start->count;
         segment_size = sizeof(SpicePathSeg) + (uint64_t) count * sizeof(SpicePointFix);
         mem_size += sizeof(SpicePathSeg *) + SPICE_ALIGN(segment_size, 4);
+        /* avoid going backward with 32 bit architectures */
+        spice_assert((uint64_t) count * sizeof(QXLPointFix)
+                     <= (char*) end - (char*) &start->points[0]);
         start = (QXLPathSeg*)(&start->points[count]);
     }
 
-- 
2.4.3

